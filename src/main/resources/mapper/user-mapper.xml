<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace：对应的dao接口的全限定类名-->
<mapper namespace="team2.entry_automation.dao.UserMapper">

    <sql id="selectFields">
  id,username,password,salt,email,type,status,activation_code,header_url,create_time
    </sql>

    <sql id="insertFields">
  username,password,salt,type
    </sql>


    <!--本来resultType得写全限定类名
    但由于application配置文件配置了mybatis.type-aliases-package=com.example.demo.entity
，所以直接写类名就行-->
    <!--不能select *吗？ why-->
    <select id="selectById"  resultType="User">
        SELECT <include refid="selectFields"></include>
        FROM user WHERE id = #{id};
    </select>

    <select id="selectByName" parameterType="String" resultType="User">
        SELECT <include refid="selectFields"></include>
        FROM user WHERE username = #{username};
    </select>

    <select id="selectByEmail"  resultType="User">
        SELECT <include refid="selectFields"></include>
        FROM user WHERE email = #{email};
    </select>

    <select id="countByUserName"  resultType="int">
--         SELECT COUNT (*) FROM user WHERE username = #{username};
        SELECT count(*) FROM user WHERE username = #{username};
    </select>

    <!--<include>前后有括号-->
    <!--keyProperty="id"：回填id，不然java中的id默认值为0-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        INSERT INTO user (<include refid="insertFields"></include>) VALUES(#{username},#{password},#{salt},
         #{type})
    </insert>

    <update id="updateStatus">
        UPDATE user SET status = #{status}
        WHERE id = #{id}
    </update>

    <update id="updateHeader">
        UPDATE user SET header_url = #{headerUrl}
        WHERE id = #{id}
    </update>

    <update id="updatePassword">
        UPDATE user SET password = #{password}
        WHERE id = #{id}
    </update>


</mapper>